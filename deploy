#!/bin/bash

cd $(dirname $0)
DOTFILES_HOME=`pwd`

# check os
OSTYPE=unknown
SHELLTYPE=unknown
UNAME=`uname -a`
[[ $UNAME =~ "Darwin" ]] && OSTYPE=macos
[[ $UNAME =~ "MSYS" ]] && OSTYPE=msys2
[[ $UNAME =~ "MINGW" ]] && OSTYPE=msys2
[[ $UNAME =~ "ubuntu" ]] && OSTYPE=ubuntu
[[ $SHELL =~ "zsh" ]] && SHELLTYPE=zsh
[[ $SHELL =~ "bash" ]] && SHELLTYPE=bash

# deploy dotfiles
create_link() {
  fpath=$1

  # check os type
  os_ext=""
  fname=$fpath
  if [[ $fname =~ ^(.*)-(.*)$ ]]; then
    fname=${BASH_REMATCH[1]}
    os_ext=${BASH_REMATCH[2]}
  fi
  if [ ${#os_ext} -ne 0 ] && [ ! ${os_ext} == ${OSTYPE} ]; then
    continue
  fi
  if [ ${#os_ext} -eq 0 ] && [ -e $DOTFILES_HOME/$fname-${OSTYPE} ]; then
    continue
  fi

  # create symbolic link
  if [ -e ~/$fname ]; then
    echo "[warn] skip $DOTFILES_HOME/$fpath -> ~/$fname"
  else
    ln -s $DOTFILES_HOME/$fpath ~/$fname
    echo "link $DOTFILES_HOME/$fpath -> ~/$fname"
  fi
}

deploy() {
  for f in `ls -a . | grep -e "^\.[^.]?*" | grep -v -e "^\.git$"`; do

    # skip ignore path
    [[ ${f} = ".git" ]] && continue

    # skip another shell
    if [[ ${SHELLTYPE} = "bash" ]]; then
      [[ ${f} =~ "zsh" ]] && continue
    elif [[ ${SHELLTYPE} = "zsh" ]]; then
      [[ ${f} =~ "bash" ]] && continue
    fi

    # dir or file
    if [[ -f ${f} ]]; then
      # create link
      create_link $f
    else
      for sf in `find $f`; do
        [[ ! -f ${sf} ]] && continue
        mkdir -p $(dirname ~/$sf)
        create_link $sf
      done
    fi

  done
}

deploy
